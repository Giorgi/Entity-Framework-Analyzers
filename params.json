{
  "name": "Entity-framework-analyzers",
  "tagline": "Code Analyzers and Fixers for Common Entity Framework Issues.",
  "body": "# Entity Framework Analyzers [![NuGet Version](https://buildstats.info/nuget/EntityFrameworkAnalyzers)](https://www.nuget.org/packages/EntityFrameworkAnalyzers/) [![Build status](https://ci.appveyor.com/api/projects/status/jh5ula20jdqsser3?svg=true)](https://ci.appveyor.com/project/Giorgi/entity-framework-analyzers) [![Apache license](http://img.shields.io/badge/license-Apache-brightgreen.svg)](https://github.com/Giorgi/Entity-Framework-Analyzers/blob/master/LICENSE.md)\r\n\r\n\r\nCode Analyzers and fixes for common Entity Framework issues built by [.NET Compiler Platform (\"Roslyn\")](https://github.com/dotnet/roslyn)\r\n\r\n## Available Analyzers\r\n\r\n**Use Include method with lambda expression overload**\r\n> Use Include method with lambda expression overload. This provides compile time validation and refactoring support\r\n\r\n\r\n**Use Skip/Take with lambda expression**\r\n> Using Skip/Take overload which takes lambda expression will generate parameterized sql statement. Query execution plan for the statement can be reused for different values of parameters.\r\n\r\n\r\n**Calling class constructor on Queryable will throw an exception**\r\n> Calling class constructor on Queryable will throw an exception because it cannot be translated to sql statement\r\n\r\n\r\n##How to get it\r\n\r\nEntity Framework Analyzers is available on Nuget. To add the analyzers to your project run the following command in the Visual Studio Package Manager Console:\r\n\r\n``` \r\nPM> Install-Package EntityFrameworkAnalyzers \r\n```\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}